# $Id$
#
###################  APM Insight Agent Configuration File  ###################
#
#This file contains configuration options for APM Insight agent installation in your Application Server.
#
#NOTE: Though the properties can be defined in any different order, it is advisable to maintain
#the below order for related properties and ease of reference.
#
#All the configuration options defaults to factory configuration if commented or not supported values

#License key of your account.
license.key=ba637684cf51ee745d6fdd37c94ca45a

#Logical name of your application. Say for example you have "Order Processing" applications running in
#10 instances of Tomcat server. Specify the name as "Order Processing" for the name in all the 10 
#instances while deploying the agent. Site24x7 will group the data from 10 instances of
#Tomcat and provide response time, throughput etc. 
application.name=Dagger-RB

#APM Insight agent communicates to the Site24x7 through the HTTP/HTTPS protocol.
#Specify Proxy server configuration when there is a proxy server between APM Insight agent and
#Site24x7 server. 
#
behind.proxy=false
#proxy.server.host=proxyserver
#proxy.server.port=proxyport
#proxy.auth.username=proxyuser
#proxy.auth.password=proxypassword

#Application Server HTTP/HTTPS listening port.Say for example when you are deploying the agent in Tomcat
#Server running in 8080 port, specify the value as 8080.
#[Mandatory]
agent.server.port=9293

#The Apdex (Application Performance Index) threshold is used to calculate application performance score.
#More at http://www.apdex.org. 
#A Transaction is said to be satisfied, if the response time is equal to or below the apdex.threshold.
#A Transaction is said to be tolerating, if  the response time is greater than apdex.threshold and less 
#than 4 times of apdex.threshold. A Transaction is said to be frustrated, if the response time is greater
#than 4 times of apdex.threshold. Say for example when you specify the value as 2, transactions with response
#time less than 2 seconds is considered as satisfied, transactions with response time greater than 2 and
#less than 8 is considered as tolerating and transactions with response time greater than 8 seconds is 
#considered as frustrating.
#default value: 0.5 (second)
apdex.threshold=0.5

#Whether SQL queries getting executed in your application need to be tracked or not.
#default value: true
sql.capture.enabled=true

#Whether the transaction trace is enabled or not. Setting this value to true will send the trace of the
#slow transaction.
#default value: true
transaction.trace.enabled=true

#Threshold to construct the trace for slow transactions. Transaction Traces violating this threshold will be 
#collected and sent to the server. Used to analyze and troubleshoot the Transaction by the user.
#default value: 2 (second)
transaction.trace.threshold=2

#Enabling this option will parametrize all SQL Queries in Slow Transaction Traces (if sql.capture.enabled 
#set to true & transaction.trace.enabled set to true). Disabling this option will give you the real query
#with actual parameters. It is recommended to enable this option if there are queries getting executed
#using confidential parameters like credit card number, passwords, etc.
#default value: true
transaction.trace.sql.parametrize=true

#Threshold value to generate a stack trace to identify the caller who executed a slow query. This stack 
#trace is sent to the server for the user to analyze and troubleshoot
#default value: 3 (second)
transaction.trace.sql.stacktrace.threshold=3

#Capture HTTP web request parameters, if enabled. To skip recording specific request parameters use webtrasnaction.trace.input.params.ignore key.
#default value: false
webtransaction.trace.input.params.record=false

#Skip recording confidential request parameters like password, authKey, etc.
#Use comma (,) as parameter names separator.
#If no value is specified all parameters will be recorded.
#Value(s) specified for this key are case sensitive.
webtransaction.trace.input.params.ignore=password, pswd, pass, authKey, parentId, parentID, resourceId, resourceID, id, ID

#Stop listening transactions with specified URL pattern.
transaction.skip.listening=*.css, *.js, *.gif, *.jpg, *.jpeg, *.bmp, *.png

#Sampling counter.Say for example when you specify the value as 20, agent will track one in 20 transactions.
#default value: 1 (transaction)
transaction.tracking.request.interval=1

#Time interval for the agent to collect the JVM related data like Memory Usage, Cpu Usage, etc.
#For example, if value is set to 3, agent will collect data for every 3 minutes.
#default value: 5 (minutes)
#jvm.polling.interval=

#The grouping (componentization) of includes packages. 
#By Default, APM Insight groups transactions into 
#STRUTS, FILTER, JSP, SERVLET, EJB, IBATIS, HIBERNATE, 
#MYSQL, MSSQL, PGSQL, ORACLE, IBMDB2, SYBASE, JDBC (for other database types) and POJO (Plain Java Object) components.
#For additional components of your custom includes packages, use include.components
#eg: configuring com/test/memcache/.*:memcache will group all the packages & classes that
#starts with com.test.memcache into MEMCACHE component.
#Note : The package name will default be included for instrumentation and you need NOT give this in include.package separately.
#Use comma(,) to separate multiple entries.
#include.components=

#Directory where agent logs information separately.
#Defaults to the directory where apminsight-javaagent.jar is installed. 
#Use forward slash(/) as path separator.
#apminsight.log.dir=./apminsight/logs

#The log level at which the APM Insight agent should record logging 
#information. The levels are SEVERE, WARNING, INFO, FINE in the order 
#respectively. Defaults to the level INFO if commented or mentioned 
#incorrectly.
apminsight.log.level=INFO
